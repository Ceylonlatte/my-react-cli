{
  "compilerOptions": {
    /* Language and Environment */
    "target": "es5" /* 指定输出 ECMAScript 目标版本. */,

    /* Modules */
    "module": "ESNext" /* 面向未来的ESM模块化. */,

    /* JavaScript Support */
    "allowJs": true /* 允许编译 JavaScript 文件. */,
    "checkJs": true /* 检查 JS 文件. */,

    /* Emit */
    "declaration": true /* 生成相应的.d.ts文件. */,
    "sourceMap": true /* Create source map files for emitted JavaScript files. */,
    "moduleResolution": "node" /* 将模块解析模式设置为node.js解析模式 */,
    "allowSyntheticDefaultImports": true /* 允许从没有默认导出的模块进行默认导入 */,
    "resolveJsonModule": true /* 允许使用 .json 扩展名导入的模块 */,

    /* Interop Constraints */
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

    /* Type Checking */
    "noEmit": true /* 不输出(意思是不编译代码，只执行类型检查) */,
    "jsx": "react", // react18这里也可以改成react-jsx
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": false /* 不允许使用隐式的 any 类型 */,
    "noImplicitThis": false /*  不允许 this 有隐式的 any 类型，即 this 必须有明确的指向 */,
    "strictNullChecks": false /* 不允许把 null、undefined 赋值给其他类型变量 */,

    /* Completeness */
    "skipLibCheck": true /* Skip type checking all .d.ts files. */,
    "baseUrl": "./" /* 解析非相对模块名的基准目录, 相对模块不会受baseUrl的影响 */,
    "paths": {
      "@/*": ["src/*"] /* 用于设置模块名称到基于baseUrl的路径映射 */
    },
    "lib": ["esnext", "dom", "dom.iterable", "scripthost"] /* lib用于指定要包含在编译中的库文件 */
  },

  "include": ["src"],
  "exclude": ["node_modules", "dist"] // *** 不进行类型检查的文件 ***
}
